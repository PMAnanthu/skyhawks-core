plugins {
	id 'org.springframework.boot' version '2.3.12.RELEASE'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
}

version = '0.0.1'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	set('springCloudVersion', "2020.0.3")
	set('springCloudVersion', "Hoxton.SR11")
}

dependencies {
	implementation project(':libs:skyhawks-dtos')
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-json'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springdoc:springdoc-openapi-ui:1.5.9'
	implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.5.9'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}



String image="pmananthu/skyhawks-notification-service:${project.version}"

task buildDocker(type: Exec){
	println 'building docker for skyhawks-notification-service'
	commandLine 'docker','build','-t',image,'.'
}

task pushDocker(type: Exec){
	println 'pushing docker for skyhawks-notification-servic'
	commandLine 'docker','push',image
}